{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Francisco Navarro Morales \u00b6 I am a software engineer from Spain with experience in cloud computing, security, QA and automation. Those are my public notes available for anyone where I share everything I found interesting on my career learning path. Topics I care about are: Linux, OpenSource, Security, Docker, Kubernetes, AWS, Terraform, Infrastructure, Web, Internet, Networking...","title":"Francisco Navarro Morales"},{"location":"#francisco-navarro-morales","text":"I am a software engineer from Spain with experience in cloud computing, security, QA and automation. Those are my public notes available for anyone where I share everything I found interesting on my career learning path. Topics I care about are: Linux, OpenSource, Security, Docker, Kubernetes, AWS, Terraform, Infrastructure, Web, Internet, Networking...","title":"Francisco Navarro Morales"},{"location":"Bug%20Bounty/SQL%20Injection/","text":"SQL-injection \u00b6 This is a typical vulnerability were a server makes insecure queries to SQL databases using user input parameters that can be exploited by a hacker to retrieve information from the database or even to modify it. Best docs on SQLi: https://portswigger.net/web-security/sql-injection Recon \u00b6 So the first step to start working in SQL injection vulnerability hunting is to find pages susceptible to be exploited with this kind of attack.","title":"SQL-injection"},{"location":"Bug%20Bounty/SQL%20Injection/#sql-injection","text":"This is a typical vulnerability were a server makes insecure queries to SQL databases using user input parameters that can be exploited by a hacker to retrieve information from the database or even to modify it. Best docs on SQLi: https://portswigger.net/web-security/sql-injection","title":"SQL-injection"},{"location":"Bug%20Bounty/SQL%20Injection/#recon","text":"So the first step to start working in SQL injection vulnerability hunting is to find pages susceptible to be exploited with this kind of attack.","title":"Recon"},{"location":"Bug%20Bounty/Recon/Main/","text":"What is Reconnaissance or information gathering? \u00b6 Collecting information about the target systems that will be useful to find ways to penetrate into them. Useful: - https://infosecwriteups.com/recon-methodology-for-bug-hunting-e623120a7ca6 - https://infosecsanyam.medium.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2 Subdomain enumeration \u00b6 This technique increase our attack surface by collecting others domains (subdomains) that are part of the target scope but are not listed by default in the program description. Some tools for subdomain enumeration are: - Subfinder - Assetfinder - Dnsenum - Google Dorking - Dnsdumpster - virustotal Examples \u00b6","title":"What is Reconnaissance or information gathering?"},{"location":"Bug%20Bounty/Recon/Main/#what-is-reconnaissance-or-information-gathering","text":"Collecting information about the target systems that will be useful to find ways to penetrate into them. Useful: - https://infosecwriteups.com/recon-methodology-for-bug-hunting-e623120a7ca6 - https://infosecsanyam.medium.com/web-application-security-bug-bounty-methodology-reconnaissance-vulnerabilities-reporting-635073cddcf2","title":"What is Reconnaissance or information gathering?"},{"location":"Bug%20Bounty/Recon/Main/#subdomain-enumeration","text":"This technique increase our attack surface by collecting others domains (subdomains) that are part of the target scope but are not listed by default in the program description. Some tools for subdomain enumeration are: - Subfinder - Assetfinder - Dnsenum - Google Dorking - Dnsdumpster - virustotal","title":"Subdomain enumeration"},{"location":"Bug%20Bounty/Recon/Main/#examples","text":"","title":"Examples"},{"location":"Certifications%20notes/compTIA%20security%20%2B/Attacks%2C%20Threats%20and%20vulnerabilities/","text":"Terms \u00b6 Phishing: when someone pretend to be a legitimate source and send you a malicious email/text/SMS with the objective of making you click in a dangerous link or download a problematic file. Pharming: Phishing sent to large groups of people. Vishing: voice phishing via phone or voicemail. Smishing (SMS Phishing): Phishing through SMS. Social engineering : Spoofing: Spoofing is a fraudulent act in which communication from an unknown source is disguised as being from a source that is known to and trusted by the recipient. In its most primitive form, spoofing refers to impersonation via telephone . Other types: Email Spoofing , DNS Spoofing , IP Spoofing , DDoS Spoofing , ARP Spoofing ... Pretexting: Pretexting is a certain type of social engineering technique that manipulates victims into divulging information . A pretext is a made-up scenario developed by threat actors for the purpose of stealing a victim's personal data. Poisoned DNS (DNS spoofing) -> hack a DNS server to server malicious IPs instead of the correct ones when asked for a domain name resolution. Impersonation : pretend to be someone else (usually with pretexting). Dumpster diving : collect information from the trash thrown by a target. One interesting thing to avoid this is shred any document that you will throw away (cut it into small pieces). Shoulder surfing : when someone \"look over your shoulder\" while you are working with delicate/important files/services to gather information about you or your company/org. Privacy filters : black everything in a screen for anyone who isn't directly in front of the screen. Hoax/Hoaxes : a threat that doesn't actually exists but seems that COULD be real, consuming our resources (time, energy, CPU). De-hoaxing : consider the source, trust no one. Spam filters can help. If it sounds to good to be true, it isn't. Cross reference (hoax-slayer.net, snopes.com) Watering hole attack : when the target is secure enough to prevent threats, attackers can attack third-party services used by the organization and use those to infect the targets. It could be just a coffee or shop next to a company's office, it could happen to a website, a DNS, API service... it can be prevented with firewalls and IPS configurations as well as good antivirus. Detecting Phishing emails \u00b6 There is usually something wrong with the page: images not loading well or grammar errors. Also the domain name can be very similar to the expected one but will have an small error (this is Typosquatting, for example www.gooogle.com has 3 Os instead of 2). They put some type of situation in place, and they try to see if they can get you to act on it. For example, they may have a message that they\u2019re calling with or an email that says, hi, we\u2019re calling from Visa regarding an automated payment to your utility service. And then they might have click on something or offer to provide that particular payment over the phone. Complex phishing attacks \u00b6 When the phishing targets an specific person and his performed after a reconnaissance phase were the attacker gathers personal information from the victim in order to make a believable pretext. A lot of public information is available on internet: LinkedIn, twitter, Facebook, Instagram... If it is directed to someone with big influence or a lot of money it is called whaling","title":"Terms"},{"location":"Certifications%20notes/compTIA%20security%20%2B/Attacks%2C%20Threats%20and%20vulnerabilities/#terms","text":"Phishing: when someone pretend to be a legitimate source and send you a malicious email/text/SMS with the objective of making you click in a dangerous link or download a problematic file. Pharming: Phishing sent to large groups of people. Vishing: voice phishing via phone or voicemail. Smishing (SMS Phishing): Phishing through SMS. Social engineering : Spoofing: Spoofing is a fraudulent act in which communication from an unknown source is disguised as being from a source that is known to and trusted by the recipient. In its most primitive form, spoofing refers to impersonation via telephone . Other types: Email Spoofing , DNS Spoofing , IP Spoofing , DDoS Spoofing , ARP Spoofing ... Pretexting: Pretexting is a certain type of social engineering technique that manipulates victims into divulging information . A pretext is a made-up scenario developed by threat actors for the purpose of stealing a victim's personal data. Poisoned DNS (DNS spoofing) -> hack a DNS server to server malicious IPs instead of the correct ones when asked for a domain name resolution. Impersonation : pretend to be someone else (usually with pretexting). Dumpster diving : collect information from the trash thrown by a target. One interesting thing to avoid this is shred any document that you will throw away (cut it into small pieces). Shoulder surfing : when someone \"look over your shoulder\" while you are working with delicate/important files/services to gather information about you or your company/org. Privacy filters : black everything in a screen for anyone who isn't directly in front of the screen. Hoax/Hoaxes : a threat that doesn't actually exists but seems that COULD be real, consuming our resources (time, energy, CPU). De-hoaxing : consider the source, trust no one. Spam filters can help. If it sounds to good to be true, it isn't. Cross reference (hoax-slayer.net, snopes.com) Watering hole attack : when the target is secure enough to prevent threats, attackers can attack third-party services used by the organization and use those to infect the targets. It could be just a coffee or shop next to a company's office, it could happen to a website, a DNS, API service... it can be prevented with firewalls and IPS configurations as well as good antivirus.","title":"Terms"},{"location":"Certifications%20notes/compTIA%20security%20%2B/Attacks%2C%20Threats%20and%20vulnerabilities/#detecting-phishing-emails","text":"There is usually something wrong with the page: images not loading well or grammar errors. Also the domain name can be very similar to the expected one but will have an small error (this is Typosquatting, for example www.gooogle.com has 3 Os instead of 2). They put some type of situation in place, and they try to see if they can get you to act on it. For example, they may have a message that they\u2019re calling with or an email that says, hi, we\u2019re calling from Visa regarding an automated payment to your utility service. And then they might have click on something or offer to provide that particular payment over the phone.","title":"Detecting Phishing emails"},{"location":"Certifications%20notes/compTIA%20security%20%2B/Attacks%2C%20Threats%20and%20vulnerabilities/#complex-phishing-attacks","text":"When the phishing targets an specific person and his performed after a reconnaissance phase were the attacker gathers personal information from the victim in order to make a believable pretext. A lot of public information is available on internet: LinkedIn, twitter, Facebook, Instagram... If it is directed to someone with big influence or a lot of money it is called whaling","title":"Complex phishing attacks"},{"location":"Splunk/Fix%20timeout%20issues%20with%20long%20db%20connect%20queries/","text":"Splunk has an application called \"Splunk DB Connect\", you can configure it to make DB queries to any DB. ![[splunk_error.png]] By default, this app has a query timeout of 30 seconds and, sometimes, your queries will grow in time required to retrieve an answer and will fail with an error very similar to the following one: java.sql.SQLTransientConnectionException: unnamed_pool_767188343_jdbc__postgresql__//my-database-read-replica.aaamj1isejlf.eu-west-2.rds.amazonaws.com__5432/myquery - Connection is not available, request timed out after 30000ms. This can be fixed by increasing the *query_timeout parameter in db_inputs.conf configuration file. Depending on your Splunk environment architecture, you will need to do this change in one instance or another, but you will typically want to do the change in the search instance *. This parameter is not configurable through the web interface you need to login into de search instance and modify the file manually. Then, you will need to restart the Splunkd service to make the change effective and consider that you will lose any change made to the default files on updates, so refer to splunk docs to know how to make this change permanent. As for an example on how to fix this in a splunk environment configured with systemd: # locate the configuration file find / -name \"db_inputs.conf\" 2> /dev/null # edit the file vi /opt/splunk/etc/apps/splunk_app_db_connect/default/db_inputs.conf Increase the query_timeout field. By default, it should be in 30. You can push it to 90, for example. query_timeout = 90","title":"Fix timeout issues with long db connect queries"},{"location":"Troubleshooting/Teams%20on%20Linux%20memory%20leak/","text":"Teams on Linux troubleshooting: memory leak \u00b6 I have been using Teams on Linux for a few months and recently I have started to have troubles initializing it. I did this to find possible log files related to the service: find / -name '*teams*' 2> /dev/null | grep -v \"icons\" And found gold: ... /var/lib/systemd/coredump/core.teams.1000.24dd6669b1b84c2ea684ebb7d4f2a3a0.3812.1645430810000000.zst /var/lib/systemd/coredump/core.teams.1000.d771303a93524fda9c735db18f326638.2323.1645522605000000.zst /var/lib/systemd/coredump/core.teams.1000.24dd6669b1b84c2ea684ebb7d4f2a3a0.2682.1645430748000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.11093.1645519942000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.10539.1645519906000000.zst /var/lib/systemd/coredump/core.teams.1000.d771303a93524fda9c735db18f326638.2977.1645522642000000.zst /var/lib/systemd/coredump/core.teams.1000.e38529d4044f43f28c8c80246b8e6a1d.2259.1645431541000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.17364.1645522349000000.zst ... There were lot of core-dumps reports on my system related to teams. I checked for logs as well: /home/username/.config/teams /home/username/.config/Microsoft/Microsoft Teams/media-stack/teams.msrtc-1-s516561805.blog /home/username/.config/Microsoft/Microsoft Teams/media-stack/teams.msrtc-0-s286380614.blog /home/username/.config/Microsoft/Microsoft Teams/logs/teams-startup.log /home/username/.config/Microsoft/Microsoft Teams/IndexedDB/https_teams.microsoft.com_0.indexeddb.blob /home/username/.config/Microsoft/Microsoft Teams/IndexedDB/https_teams.microsoft.com_0.indexeddb.leveldb /home/username/.config/autostart/teams.desktop So I checked this one: cat \"/home/username/.config/Microsoft/Microsoft Teams/logs/teams-startup.log\" Error while parsing hooks JSON. Error: \"ENOENT: no such file or directory, open '/home/grg121/.config/Microsoft/Microsoft Teams/hooks.json'\" (node:3936) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead. (node:3936) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 ecsSettingsUpdated listeners added to [EventEmitter]. Use emitter.setMaxListeners() to increase limit (node:3936) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 appInitialized listeners added to [EventEmitter]. Use emitter.setMaxListeners() to increase limit I removed this configuration folder (backed up it) to check if teams would create a new one BUT THIS DIDN'T SOLVE THE ISSUE mv Microsoft\\ Teams \"MicrosoftTeamsBackup\" Teams does creates the Microsoft\\ Teams folder again, but this doesn't fix the issue. So I tried creating the missing file: vi \"/home/grg121/.config/Microsoft/Microsoft Teams/hooks.json\" With this: {\"enableProcessIntegrityLevel\": false} But still, the problem persiste. I went to the AUR (arch linux user repository) entry for the teams package that I used to install this service on arch Linux and I saw that there are lot of people struggling with the same error. Even without having updated the service. It seems like something changed in the Microsoft Teams servers and now our clients are not working correctly on Linux by default. The issue can be fixed adding --no-sandbox to the execution of teams. In my case, I added it to the file: ~/.config/autostart/teams.desktop","title":"Teams on Linux troubleshooting: memory leak"},{"location":"Troubleshooting/Teams%20on%20Linux%20memory%20leak/#teams-on-linux-troubleshooting-memory-leak","text":"I have been using Teams on Linux for a few months and recently I have started to have troubles initializing it. I did this to find possible log files related to the service: find / -name '*teams*' 2> /dev/null | grep -v \"icons\" And found gold: ... /var/lib/systemd/coredump/core.teams.1000.24dd6669b1b84c2ea684ebb7d4f2a3a0.3812.1645430810000000.zst /var/lib/systemd/coredump/core.teams.1000.d771303a93524fda9c735db18f326638.2323.1645522605000000.zst /var/lib/systemd/coredump/core.teams.1000.24dd6669b1b84c2ea684ebb7d4f2a3a0.2682.1645430748000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.11093.1645519942000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.10539.1645519906000000.zst /var/lib/systemd/coredump/core.teams.1000.d771303a93524fda9c735db18f326638.2977.1645522642000000.zst /var/lib/systemd/coredump/core.teams.1000.e38529d4044f43f28c8c80246b8e6a1d.2259.1645431541000000.zst /var/lib/systemd/coredump/core.teams.1000.4066a1a450914e45a8cd89e4c18ac784.17364.1645522349000000.zst ... There were lot of core-dumps reports on my system related to teams. I checked for logs as well: /home/username/.config/teams /home/username/.config/Microsoft/Microsoft Teams/media-stack/teams.msrtc-1-s516561805.blog /home/username/.config/Microsoft/Microsoft Teams/media-stack/teams.msrtc-0-s286380614.blog /home/username/.config/Microsoft/Microsoft Teams/logs/teams-startup.log /home/username/.config/Microsoft/Microsoft Teams/IndexedDB/https_teams.microsoft.com_0.indexeddb.blob /home/username/.config/Microsoft/Microsoft Teams/IndexedDB/https_teams.microsoft.com_0.indexeddb.leveldb /home/username/.config/autostart/teams.desktop So I checked this one: cat \"/home/username/.config/Microsoft/Microsoft Teams/logs/teams-startup.log\" Error while parsing hooks JSON. Error: \"ENOENT: no such file or directory, open '/home/grg121/.config/Microsoft/Microsoft Teams/hooks.json'\" (node:3936) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead. (node:3936) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 ecsSettingsUpdated listeners added to [EventEmitter]. Use emitter.setMaxListeners() to increase limit (node:3936) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 appInitialized listeners added to [EventEmitter]. Use emitter.setMaxListeners() to increase limit I removed this configuration folder (backed up it) to check if teams would create a new one BUT THIS DIDN'T SOLVE THE ISSUE mv Microsoft\\ Teams \"MicrosoftTeamsBackup\" Teams does creates the Microsoft\\ Teams folder again, but this doesn't fix the issue. So I tried creating the missing file: vi \"/home/grg121/.config/Microsoft/Microsoft Teams/hooks.json\" With this: {\"enableProcessIntegrityLevel\": false} But still, the problem persiste. I went to the AUR (arch linux user repository) entry for the teams package that I used to install this service on arch Linux and I saw that there are lot of people struggling with the same error. Even without having updated the service. It seems like something changed in the Microsoft Teams servers and now our clients are not working correctly on Linux by default. The issue can be fixed adding --no-sandbox to the execution of teams. In my case, I added it to the file: ~/.config/autostart/teams.desktop","title":"Teams on Linux troubleshooting: memory leak"},{"location":"WARGAMES/Bandit/","text":"Bandit is an overthewire wargame that can be usefull to practice some basic Linux skills related to cybersecurity. In this page I will write down some interesting things that I have learned while doing each level of the wargame. Connect script \u00b6 There are different levels for this game and each one has an user account to which you have to log in using a password or a key. I have made this simple script easily to get connected to each level's account using a stored password. You only need to create a file called 1 or 2 , 3 ... (the number of each level) containing the user password or private key. And run the script with the level you want to connect as argument. #!/bin/bash sshpass -f $1 ssh bandit$1@bandit.labs.overthewire.org -p 2220 || ssh -i $1 bandit$1@bandit.labs.overthewire.org -p 2220 Ideas \u00b6 Find unique lines in a file \u00b6 The unique command requires that the duplicated string are sorted together so: cat $filename | sort | unique -u","title":"Bandit"},{"location":"WARGAMES/Bandit/#connect-script","text":"There are different levels for this game and each one has an user account to which you have to log in using a password or a key. I have made this simple script easily to get connected to each level's account using a stored password. You only need to create a file called 1 or 2 , 3 ... (the number of each level) containing the user password or private key. And run the script with the level you want to connect as argument. #!/bin/bash sshpass -f $1 ssh bandit$1@bandit.labs.overthewire.org -p 2220 || ssh -i $1 bandit$1@bandit.labs.overthewire.org -p 2220","title":"Connect script"},{"location":"WARGAMES/Bandit/#ideas","text":"","title":"Ideas"},{"location":"WARGAMES/Bandit/#find-unique-lines-in-a-file","text":"The unique command requires that the duplicated string are sorted together so: cat $filename | sort | unique -u","title":"Find unique lines in a file"}]}